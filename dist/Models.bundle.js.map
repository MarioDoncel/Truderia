{"version":3,"file":"Models.bundle.js","mappings":"MACAA,OAAOC,KAAO,CACVC,KAAKC,GAcD,OAbIA,GACAC,KAAKC,MAAQF,EAAQE,MACrBD,KAAKE,MAAQH,EAAQG,MACrBF,KAAKG,KAAOJ,EAAQI,OAEpBH,KAAKC,MAAQ,GACbD,KAAKE,MAAQ,CACTE,SAAU,EACVC,WAAY,GAEhBL,KAAKG,KAAO,IAAIG,MAGbN,MAEXO,OAAOC,GAEH,IAAIC,EAAiBT,KAAKU,SAASF,GAE9BC,IACDA,EAAiB,CACbD,QAAS,IAAKA,GACdJ,SAAU,EACVC,WAAY,GAEZL,KAAKC,MAAMU,KAAKF,IAGxB,IAAIG,EAAmB,EACnBH,EAAeD,QAAQK,YAAYJ,EAAeD,QAAQK,WAAWC,SAAQD,IAC7ED,GAAoBC,EAAWE,MAAQF,EAAWT,YAGtD,MAAMY,EAAoBP,EAAeD,QAAQO,MAAQH,EAOzD,OANAH,EAAeL,WACfK,EAAeJ,WAAaI,EAAeL,SAAWY,EAEtDhB,KAAKE,MAAME,WACXJ,KAAKE,MAAMG,YAAcW,EAElBhB,MAEXiB,UAAUT,GACN,MAAMU,EAAOlB,KAAKU,SAASF,GAU3B,OARAU,EAAKd,WACLc,EAAKb,YAAcG,EAAQO,MAE3Bf,KAAKE,MAAME,WACXJ,KAAKE,MAAMG,YAAcG,EAAQO,MAEZ,GAAjBG,EAAKd,UAAeJ,KAAKmB,cAAcX,GAEpCR,MAEXoB,WAAWZ,GACP,MAAMU,EAAOlB,KAAKU,SAASF,GAO3B,OALAR,KAAKE,MAAME,UAAYc,EAAKd,SAC5BJ,KAAKE,MAAMG,YAAca,EAAKb,WAE9BL,KAAKC,MAAQD,KAAKC,MAAMoB,QAAOH,GAAQV,EAAQc,SAAWJ,EAAKV,QAAQc,SAAWd,EAAQe,UAAYL,EAAKV,QAAQe,UAAYL,EAAKV,QAAQK,YAAcL,EAAQK,aAE3Jb,MAEXU,SAASF,GACL,OAAOR,KAAKC,MAAMuB,MAAKN,GAAQA,EAAKV,QAAQc,SAAWd,EAAQc,SAAWd,EAAQe,UAAYL,EAAKV,QAAQe,UAAYE,KAAKC,UAAUR,EAAKV,QAAQK,aAAeY,KAAKC,UAAUlB,EAAQK,gBAMjM,MAAMc,EACFC,cACI5B,KAAK6B,KAAO,CACRC,KAAM,GACNC,UAAW,GACXC,QAAS,CACLC,QAAS,GACTC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,WAAY,KAKxBC,oBACI,IAAIC,EAAed,KAAKe,MAAMC,aAAaC,QAAQ,WAEnD,OADKH,IAAcA,EAAe,IAAIZ,GAC/BY,EAGXzC,OACI,OAAOE,KAAKsC,oBAGhBK,WAAWb,GAGP,OAFA9B,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKC,KAAOA,EACV9B,KAGX4C,gBAAgBb,GAGZ,OAFA/B,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKE,UAAYA,EACf/B,KAEX6C,cAAcZ,GAGV,OAFAjC,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKG,QAAQC,QAAUA,EACrBjC,KAGX8C,aAAaC,GAKT,OAJA/C,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKG,QAAQE,OAASa,EAAQf,QAAQE,OAC3ClC,KAAK6B,KAAKG,QAAQG,SAAWY,EAAQf,QAAQG,SAC7CnC,KAAK6B,KAAKG,QAAQC,QAAUc,EAAQf,QAAQC,QACrCjC,KAGXgD,aAAad,GAGT,OAFAlC,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKG,QAAQE,OAASA,EACpBlC,KAEXiD,eAAed,GAGX,OAFAnC,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKG,QAAQG,SAAWA,EACtBnC,KAEXkD,aAAad,GAGT,OAFApC,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKG,QAAQI,OAASA,EACpBpC,KAEXmD,iBAAiBd,GAGb,OAFArC,KAAK6B,KAAO7B,KAAKsC,oBAAoBT,KACrC7B,KAAK6B,KAAKG,QAAQK,WAAaA,EACxBrC,MAIfJ,OAAOwD,OAAS,IAAIzB,G","sources":["webpack://truderia/./scripts/Models.js"],"sourcesContent":["\r\nwindow.Cart = {\r\n    init(oldCart) {\r\n        if (oldCart) {\r\n            this.items = oldCart.items\r\n            this.total = oldCart.total\r\n            this.date = oldCart.date\r\n        } else {\r\n            this.items = []\r\n            this.total = {\r\n                quantity: 0,\r\n                totalPrice: 0,\r\n            }\r\n            this.date = new Date()\r\n        }\r\n\r\n        return this\r\n    },\r\n    addOne(product) {\r\n\r\n        let cartHasProduct = this.findItem(product)\r\n\r\n        if (!cartHasProduct) {\r\n            cartHasProduct = {\r\n                product: { ...product },\r\n                quantity: 0,\r\n                totalPrice: 0\r\n            },\r\n                this.items.push(cartHasProduct)\r\n        }\r\n\r\n        let additionalsPrice = 0\r\n        if (cartHasProduct.product.additional) cartHasProduct.product.additional.forEach(additional => {\r\n            additionalsPrice += additional.price * additional.quantity\r\n        })\r\n\r\n        const totalProductPrice = cartHasProduct.product.price + additionalsPrice\r\n        cartHasProduct.quantity++\r\n        cartHasProduct.totalPrice = cartHasProduct.quantity * totalProductPrice\r\n\r\n        this.total.quantity++\r\n        this.total.totalPrice += totalProductPrice\r\n\r\n        return this\r\n    },\r\n    removeOne(product) {\r\n        const item = this.findItem(product)\r\n\r\n        item.quantity--\r\n        item.totalPrice -= product.price\r\n\r\n        this.total.quantity--\r\n        this.total.totalPrice -= product.price\r\n\r\n        if (item.quantity == 0) this.deleteProduct(product)\r\n\r\n        return this\r\n    },\r\n    deleteItem(product) {\r\n        const item = this.findItem(product)\r\n\r\n        this.total.quantity -= item.quantity\r\n        this.total.totalPrice -= item.totalPrice\r\n\r\n        this.items = this.items.filter(item => product.flavour != item.product.flavour || product.category != item.product.category || item.product.additional != product.additional)\r\n\r\n        return this\r\n    },\r\n    findItem(product) {\r\n        return this.items.find(item => item.product.flavour == product.flavour && product.category == item.product.category && JSON.stringify(item.product.additional) == JSON.stringify(product.additional))\r\n\r\n    }\r\n\r\n}\r\n\r\nclass ClientClass {\r\n    constructor(){\r\n        this.data = {\r\n            name: '',\r\n            telephone: '',\r\n            address: {\r\n                zipCode: '',\r\n                street: '',\r\n                district: '',\r\n                number: '',\r\n                complement: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    checkClientExists(){\r\n        let clientExists = JSON.parse(localStorage.getItem('client'))\r\n        if (!clientExists) clientExists = new ClientClass\r\n        return clientExists\r\n    }\r\n\r\n    init() {\r\n        return this.checkClientExists()\r\n    }\r\n\r\n    updateName(name) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.name = name\r\n        return this\r\n    }\r\n\r\n    updateTelephone(telephone) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.telephone = telephone\r\n        return this\r\n    }\r\n    updateZipCode(zipCode) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.address.zipCode = zipCode\r\n        return this\r\n    }\r\n\r\n    updateVIACEP(newData) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.address.street = newData.address.street\r\n        this.data.address.district = newData.address.district\r\n        this.data.address.zipCode = newData.address.zipCode\r\n        return this\r\n    }\r\n\r\n    updateStreet(street) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.address.street = street\r\n        return this\r\n    }\r\n    updateDistrict(district) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.address.district = district\r\n        return this\r\n    }\r\n    updateNumber(number) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.address.number = number\r\n        return this\r\n    }\r\n    updateComplement(complement) {\r\n        this.data = this.checkClientExists().data\r\n        this.data.address.complement = complement\r\n        return this\r\n    }\r\n}\r\n\r\nwindow.Client = new ClientClass\r\n\r\n// class LocalStorage {\r\n//     constructor(){\r\n//         this.cart = JSON.parse(localStorage.getItem('cart'))\r\n//         this.itemChosed = JSON.parse(localStorage.getItem('itemChosed'))\r\n//         this.paymentMethod = JSON.parse(localStorage.getItem('paymentMethod'))\r\n//         this.receiveMethod = JSON.parse(localStorage.getItem('receiveMethod'))\r\n//         this.categoryChosed = JSON.parse(localStorage.getItem('categoryChosed'))\r\n//         this.client = JSON.parse(localStorage.getItem('client'))\r\n//         this.changeNeeded = JSON.parse(localStorage.getItem('changeNeeded'))\r\n//         this.deliveryTax = JSON.parse(localStorage.getItem('deliveryTax'))\r\n//     }\r\n//     static save(key, value){\r\n//         localStorage.setItem(key, JSON.stringify(value))\r\n//     }\r\n//     static delete(key){\r\n//         localStorage.removeItem(key)\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// const Client = {\r\n//     init() {\r\n//         const oldClient = JSON.parse(localStorage.getItem('client'))\r\n//         if (oldClient) {\r\n//             this.data = oldClient.data\r\n//         } else {\r\n//             this.data = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n//             }\r\n//         }\r\n//         return this\r\n//     },\r\n//     updateVIACEP(newData) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n//         // if(clientExists) this.data = this.data.data\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 data: {\r\n//                     name: '',\r\n//                     telephone: '',\r\n//                     address: {\r\n//                         zipCode: '',\r\n//                         street: '',\r\n//                         district: '',\r\n//                         number: '',\r\n//                         complement: ''\r\n//                     }\r\n//                 }\r\n//             },\r\n\r\n//                 this.data = clientExists.data\r\n//         }\r\n//         this.data.address.street = newData.address.street\r\n//         this.data.address.district = newData.address.district\r\n//         this.data.address.zipCode = newData.address.zipCode\r\n\r\n\r\n//         return this\r\n//     },\r\n//     updateName(name) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.name = name\r\n\r\n\r\n//         return this\r\n//     },\r\n//     updateTelephone(telephone) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.telephone = telephone\r\n//         return this\r\n//     },\r\n//     updateZipCode(zipCode) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.address.zipCode = zipCode\r\n//         return this\r\n//     },\r\n//     updateStreet(street) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.address.street = street\r\n//         return this\r\n//     },\r\n//     updateDistrict(district) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.address.district = district\r\n//         return this\r\n//     },\r\n//     updateNumber(number) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.address.number = number\r\n//         return this\r\n//     },\r\n//     updateComplement(complement) {\r\n//         let clientExists = JSON.parse(localStorage.getItem('client'))\r\n\r\n//         if (!clientExists) {\r\n//             clientExists = {\r\n//                 name: '',\r\n//                 telephone: '',\r\n//                 address: {\r\n//                     zipCode: '',\r\n//                     street: '',\r\n//                     district: '',\r\n//                     number: '',\r\n//                     complement: ''\r\n//                 }\r\n\r\n//             },\r\n//                 this.data = clientExists\r\n//         }\r\n//         this.data.address.complement = complement\r\n//         return this\r\n//     },\r\n// }"],"names":["window","Cart","init","oldCart","this","items","total","date","quantity","totalPrice","Date","addOne","product","cartHasProduct","findItem","push","additionalsPrice","additional","forEach","price","totalProductPrice","removeOne","item","deleteProduct","deleteItem","filter","flavour","category","find","JSON","stringify","ClientClass","constructor","data","name","telephone","address","zipCode","street","district","number","complement","checkClientExists","clientExists","parse","localStorage","getItem","updateName","updateTelephone","updateZipCode","updateVIACEP","newData","updateStreet","updateDistrict","updateNumber","updateComplement","Client"],"sourceRoot":""}